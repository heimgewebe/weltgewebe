name: Web Check (Gate A)

permissions:
  contents: read

on:
  pull_request:
    branches: [main, dev]
    paths:
      - apps/web/**
      - .github/workflows/web.yml
  push:
    branches: [main, dev, 'feat/**', 'fix/**']
    paths:
      - apps/web/**
      - .github/workflows/web.yml

jobs:
  build:
    name: Build & Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write   # required for npm cache restore
    env:
      PUPPETEER_SKIP_DOWNLOAD: "true"
      NPM_CONFIG_AUDIT: "false"
      NPM_CONFIG_FUND: "false"
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
      cancel-in-progress: true
    defaults:
      run:
        working-directory: apps/web

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20.19.0'
          cache: npm
          cache-dependency-path: apps/web/package-lock.json
      - name: Enable Corepack (npm)
        run: corepack enable

      - name: Install dependencies
        run: |
          # Bevorzugt deterministisch mit npm ci, fällt aber bei stale lockfile
          # automatisch auf npm install zurück, damit der Run nicht scheitert.
          npm ci || (echo "::warning::package-lock.json ist nicht in Sync – fallback auf 'npm install'"; npm install --include=dev)

      - name: SvelteKit prepare
        run: npm run sync

      - name: Typecheck
        run: npm run check

      - name: Lint
        run: npm run lint

      - name: Build
        run: CI=true npm run build

      - name: Playwright: setup browsers (CI)
        # WICHTIG: Nicht "0" setzen – jede nicht-leere Zeichenkette gilt als truthy
        # und verhindert weiterhin den Download. Ein leerer String sorgt dafür,
        # dass vorhandene job-/repo-/orgweite Defaults überschrieben werden.
        env:
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: ""
        run: npm run test:setup

      - name: Test (CI)
        run: npm run test:ci

      - name: Upload Playwright report (best-effort)
        if: always()
        run: npm run test:report || true

      - name: Upload Playwright report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: apps/web/playwright-report
          if-no-files-found: ignore
