name: wgx-guard

on:
  push:
    paths:
      - ".wgx/**"
      - ".github/workflows/wgx-guard.yml"
      - "pyproject.toml"
      - "Cargo.toml"
  pull_request:
    paths:
      - ".wgx/**"
      - ".github/workflows/wgx-guard.yml"
      - "pyproject.toml"
      - "Cargo.toml"
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: wgx-guard-${{ github.ref }}
  cancel-in-progress: true

jobs:
  guard:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v4

      - name: Check .wgx/profile.yml presence
        run: |
          test -f .wgx/profile.yml || { echo "::error::.wgx/profile.yml missing"; exit 1; }
          echo "found .wgx/profile.yml"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install PyYAML
        run: python -m pip install pyyaml
      - name: Validate minimal schema keys
        run: python ci/scripts/validate_wgx_profile.py

      - name: (Optional) UV bootstrap (pyproject present)
        if: ${{ hashFiles('**/pyproject.toml') != '' }}
        shell: bash
        run: |
          set -euo pipefail
          UV_VERSION="$(python - <<'PY'
import pathlib
import sys
try:
    import yaml
except ImportError:
    sys.exit('PyYAML required to read toolchain.versions.yml')

data = yaml.safe_load(pathlib.Path('toolchain.versions.yml').read_text())
print(data.get('uv', '0.4.20'))
PY
)"
          scripts/tools/uv-pin.sh ensure "${UV_VERSION}"
          UV="$HOME/.local/bin/uv"
          "$UV" --version

          status=0
          while IFS= read -r -d '' file; do
            dir="$(dirname "$file")"
            echo "::group::uv sync in $dir"
            if [ -f "$dir/uv.lock" ]; then
              ( cd "$dir" && "$UV" sync --frozen ) \
                || { echo "::error::uv sync failed in $dir (frozen)"; status=1; }
            else
              ( cd "$dir" && "$UV" sync ) \
                || { echo "::error::uv sync failed in $dir"; status=1; }
            fi
            echo "::endgroup::"
          # Use '-type f' to ensure only files named 'pyproject.toml' are processed, not directories.
          # This improves specificity and avoids issues if a directory is named 'pyproject.toml' (unlikely).
          done < <(find . -type f -name "pyproject.toml" -print0)

          exit "$status"

      - name: Done
        run: echo "wgx-guard passed âœ…"
