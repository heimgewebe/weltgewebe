# syntax=docker/dockerfile:1.4
ARG BASE_IMAGE=mcr.microsoft.com/devcontainers/javascript-node:22
FROM ${BASE_IMAGE}
ENV DEBIAN_FRONTEND=noninteractive \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8

# --- Ensure expected devcontainer user exists (the CLI assumes "vscode") ---
# Idempotent: nur anlegen, wenn er fehlt (manche Base-Images liefern ihn nicht).
#
# Robustere Logik: vermeide feste UID/GID, wenn die gewünschte UID bereits belegt ist.
# Falls ${USERNAME} bereits existiert, passiert nichts. Falls die gewünschte UID
# frei ist, wird sie verwendet; sonst wird der User ohne feste UID angelegt, um
# "UID ... is not unique"-Fehler während des Image-Builds zu vermeiden.
ARG USERNAME=vscode
ARG USER_UID=1000
ARG USER_GID=${USER_UID}
RUN set -eux; \
    # ensure group exists (try with requested GID, fall back to name-only)
    if ! getent group "${USERNAME}" >/dev/null 2>&1; then \
      groupadd --gid "${USER_GID}" "${USERNAME}" || groupadd "${USERNAME}"; \
    fi; \
    # create user only if missing
    if ! getent passwd "${USERNAME}" >/dev/null 2>&1; then \
      # if the requested UID is free, create with that UID; otherwise create
      # the user without forcing UID to avoid conflicts with existing users
      if ! getent passwd "${USER_UID}" >/dev/null 2>&1; then \
        useradd --uid "${USER_UID}" --gid "${USERNAME}" -m -s /bin/bash "${USERNAME}"; \
      else \
        useradd -m -s /bin/bash -g "${USERNAME}" "${USERNAME}" || useradd -m -s /bin/bash "${USERNAME}"; \
      fi; \
    fi; \
    mkdir -p /home/"${USERNAME}"/.ssh && chown -R "${USERNAME}:${USERNAME}" /home/"${USERNAME}"

# Optional: Standard-Tools/Qualität der Life-in-Container-Experience
# + sudo installieren und passwortlosen sudo für die Gruppe sudo erlauben,
#   damit postCreate/postStart-Kommandos zuverlässig laufen.
RUN --mount=type=cache,target=/var/cache/apt \
    --mount=type=cache,target=/var/lib/apt \
    set -eux; \
    apt-get update; \
    apt-get install -y --no-install-recommends \
      ca-certificates curl git git-lfs less nano bash-completion sudo; \
    git config --system --add safe.directory /workspaces; \
    git config --system --add safe.directory /workspaces/*; \
    git config --system --add safe.directory /workspaces/weltgewebe; \
    # sudo-Gruppe sicherstellen (falls Base-Image sie nicht hat)
    if ! getent group sudo >/dev/null 2>&1; then groupadd sudo; fi; \
    usermod -aG sudo "${USERNAME}" || true; \
    # NOPASSWD Drop-In (spät einsortieren, damit es gewinnt)
    install -d -m 0755 /etc/sudoers.d; \
    echo '%sudo ALL=(ALL) NOPASSWD:ALL' > /etc/sudoers.d/99-sudo-nopasswd; \
    chmod 0440 /etc/sudoers.d/99-sudo-nopasswd; \
    rm -rf /var/lib/apt/lists/*

# Features/weitere Layer folgen darunter wie gehabt…
